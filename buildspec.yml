version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: us-east-1  # Change to your preferred region
    AWS_ACCOUNT_ID: 123456789012   # Replace with your AWS account ID
    IMAGE_REPO_NAME: my-app        # Replace with your ECR repository name

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      # Generate version number based on build number or timestamp
      - VERSION_TAG="v$(date +%Y%m%d)-${CODEBUILD_BUILD_NUMBER:-$(date +%H%M%S)}"
      - echo "Image will be tagged as $IMAGE_TAG and $VERSION_TAG"
  
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$VERSION_TAG
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:latest
  
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:$VERSION_TAG  
      - docker push $REPOSITORY_URI:latest
      - echo Writing image definitions file...
      - printf '[{"name":"'$IMAGE_REPO_NAME'","imageUri":"'$REPOSITORY_URI':'$VERSION_TAG'"}]' > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
  name: BuildArtifacts